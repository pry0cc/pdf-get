#!/usr/bin/env python3
import shutil
import signal
import string
import sys

import requests
import wget
from bs4 import BeautifulSoup


class Library(object):
    def __init__(self, query):
        results = self.search(query)
        self.print_results(results)

    def search(self, query):
        q = "http://gen.lib.rus.ec/search.php?req=" + query.replace(" ", "+    ") + "&lg_topic=libgen&open=0&view=simple&res=25&phrase=0&column=def"
        r = requests.get(q).text
        soup = BeautifulSoup(r, "html.parser")
        tr_list = soup.find_all("tr")[3:]

        results = []

        for tr in tr_list:
            item = {}
            try:
                td_list = tr.find_all("td")

                mirrors = []
                for i in range(9,13):
                    mirrors.append(td_list[i].a.get("href"))

                item["title"] = next(td_list[2].strings)
                item["url"] = td_list.a.get("href")
                item["year"] = int(td_list[4].text)
                item["pages"] = td_list[5].text
                item["language"] = td_list[6].text
                item["size"] = td_list[7].text
                item["extension"] = td_list[8].text
                item["mirrors"] = mirrors

                if item["title"] != "":
                    results.append(item)

            except Exception as e:
                pass
            else:
                pass

        return results

    def choose(self, results):
        try:
            chosen_id = int(input("ID >> "))
            item = results[chosen_id]
            id = item["url"].split("?md5=")[1]
            url = "http://libgen.io/ads.php?md5=" + id
            striptitle = ''.join([l for l in item["title"][0:-1] if l not in string.punctuation])
            filename = striptitle + "." + item["extension"]
        except Exception:
            print("Something went wrong. Is it you?")
            sys.exit(1)

        print("Locating Download URL...")
        try:
            soup = BeautifulSoup(requests.get(url).text, "html.parser")
            download_url = soup.find_all("a")[1].get("href")
        except Exception as e:
            print("Location failed. Is it blocked?")
            print(e)
        else:
            print("Commencing download....")
            print("Saving to file %s" % (filename))
            wget.download(download_url, out=filename)

    def print_results(self, results):

        def separator(length):
            for i in range(0,length):
                sys.stdout.write("-")
                sys.stdout.flush()
            print("")

        # Uncomment this to find out the offset
        title_length = width - 37
        banner = "%-4s %-*s %4s %8s  %-10s %5s" % ("ID", title_length, "Title", "Year", "Size", "Language", "Ext")

        if results:
            results_sorted = sorted(results, key=lambda k: k["year"])[::-1]
            separator(width)
            print(banner)
            separator(width)
            for index, item in enumerate(results_sorted):
                item_id = "(%s)" % (str(index))
                print("%-4s %-*s %4s %8s  %-10s %5s" % (item_id, title_length, item["title"][0:title_length - 1], item["year"],
                item["size"], item["language"], item["extension"]))

            separator(width)
            self.choose(results_sorted)
        else:
            print("No results.")

if __name__ == '__main__':
    width = (shutil.get_terminal_size().columns)
    query = " ".join(sys.argv[1:])

    def signal_handler(signal, frame):
        print('\nQuitting...')
        sys.exit(0)

    signal.signal(signal.SIGINT, signal_handler)


    def help():
        print("")
        print("Usage:   pdf-get <search query>")
        print("Help:    pdf-get -h || --help")
        print("Example: pdf-get Art of Exploitation")
        print("")

    if query != "" and query != "-h" and query != "--help":
        print("Searching for " + query + "...")
        lib = Library(query)
    else:
        help()
